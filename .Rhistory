cor(mtcars$wt,mtcars$hp)
cor(mtcars$cyl,mtcars$disp)
cor(mtcars$cyl,mtcars$hp)
cor(mtcars$disp,mtcars$hp)
plot(mtcars$am, mtcars$mpg)
?boxplot
boxplot(mtcars$mpg)
boxplot(mtcars$mpg,col=mtcars$am)
boxplot(mtcars$mpg~factor(mtcars$am))
plot(mtcars$am, mtcars$mpg)
boxplot(mtcars$mpg~factor(mtcars$am))
boxplot(mtcars$mpg ~ factor(mtcars$am), xlab="transmission", ylab="mpg")
plot(mtcars$am, mtcars$mpg)
boxplot(mtcars$mpg ~ factor(mtcars$am), xlab="transmission", ylab="mpg")
mean(subset(mtcars, am == 0)$mpg)
mean(subset(mtcars, am == 1)$mpg)
lm01 <- lm(mtcars$mpg ~ factor(mtcars$am))
summary(lm01)
sort(cor(mtcars)[1,]) # wt,cyl,disp,hp
plot(mtcars$wt, mtcars$mpg)
plot(mtcars$cyl, mtcars$mpg)
plot(mtcars$disp, mtcars$mpg)
plot(mtcars$wt, mtcars$mpg)
plot(mtcars$cyl, mtcars$mpg)
plot(mtcars$wt, mtcars$mpg, pch = mtcars$cyl)
plot(mtcars$cyl, mtcars$mpg)
boxplot(mtcars$mpg ~ factor(mtcars$cyl))
plot(mtcars$cyl, mtcars$mpg)
boxplot(mtcars$mpg ~ factor(mtcars$cyl))
plot(mtcars$cyl, mtcars$mpg)
boxplot(mtcars$mpg ~ factor(mtcars$cyl))
?par
?mf
boxplot(mtcars$mpg ~ factor(mtcars$am), xlab="transmission", ylab="mpg")
mean(subset(mtcars, am == 0)$mpg)
mean(subset(mtcars, am == 1)$mpg)
lm01 <- lm(mtcars$mpg ~ factor(mtcars$am))
summary(lm01)
sort(cor(mtcars)[1,]) # wt,cyl,disp,hp,carb,qsec,gear,am,vs,drat,mpg
plot(mtcars$wt, mtcars$mpg)
sort(cor(mtcars)[1,]) # wt,cyl,disp,hp,carb,qsec,gear,am,vs,drat,mpg
plot(mtcars$wt, mtcars$mpg)
lm02 <- lm(mtcars$mpg ~ factor(mtcars$am) + wt)
lm02 <- lm(mtcars$mpg ~ factor(mtcars$am) + mtcars$wt)
summary(lm02)
plot(mtcars$cyl, mtcars$mpg)
lm06 <- lm(mpg ~ factor(am) + cyl, data="mtcars")
lm06 <- lm(mpg ~ factor(am) + cyl, data=mtcars)
lm06 <- lm(mpg ~ factor(am) + wt + disp + cyl, data=mtcars)
summary(lm06)
lm07 <- lm(mpg ~ factor(am) + wt + disp + factor(cyl), data=mtcars)
summary(lm07)
lm07 <- lm(mpg ~ factor(am) + wt + hp + factor(cyl), data=mtcars)
summary(lm07)
?step
install.packages("car")
lmp(lm01)
PRESS <- function(linear.model) {
#' calculate the predictive residuals
pr <- residuals(linear.model)/(1-lm.influence(linear.model)$hat)
#' calculate the PRESS
PRESS <- sum(pr^2)
return(PRESS)
}
pred_r_squared <- function(linear.model) {
#' Use anova() to get the sum of squares for the linear model
lm.anova <- anova(linear.model)
#' Calculate the total sum of squares
tss <- sum(lm.anova$'Sum Sq')
# Calculate the predictive R^2
pred.r.squared <- 1-PRESS(linear.model)/(tss)
return(pred.r.squared)
}
model_fit_stats <- function(linear.model) {
r.sqr <- summary(linear.model)$r.squared
adj.r.sqr <- summary(linear.model)$adj.r.squared
pre.r.sqr <- pred_r_squared(linear.model)
PRESS <- PRESS(linear.model)
return.df <- data.frame(r.squared = r.sqr, adj.r.squared = adj.r.sqr, pred.r.squared = pre.r.sqr, press = PRESS)
return(return.df)
}
lmp <- function (modelobject) {
if (class(modelobject) != "lm") stop("Not an object of class 'lm' ")
f <- summary(modelobject)$fstatistic
p <- pf(f[1],f[2],f[3],lower.tail=F)
attributes(p) <- NULL
return(p)
}
library(datasets)
library(ggplot2)
library(plyr)
data(mtcars)
lm01 <- lm(mpg ~ factor(am), data = mtcars)
lmp(lm01)
round(lmp(lm01),8)
round(lmp(lm01),4)
summary(lm01)$r.squared
class(lmp(lm01))
ms01 <- c(summary(lm01)$fstatistic,summary(lm01)$fstatistic,summary(lm01)$fstatistic,summary(lm01)$adj.r.squared,pred_r_squared(lm01),NULL)
ms01
class(ms01)
ms02 <- c(summary(lm02)$fstatistic[1],lmp(lm02),summary(lm02)$r.squared,summary(lm02)$adj.r.squared,pred_r_squared(lm02),vif(lm02))
lm02 <- lm(mpg ~ wt + factor(am), data = mtcars)
ms02 <- c(summary(lm02)$fstatistic[1],lmp(lm02),summary(lm02)$r.squared,summary(lm02)$adj.r.squared,pred_r_squared(lm02),vif(lm02))
library(car)
ms02 <- c(summary(lm02)$fstatistic[1],lmp(lm02),summary(lm02)$r.squared,summary(lm02)$adj.r.squared,pred_r_squared(lm02),vif(lm02))
ms02
PRESS <- function(linear.model) {
#' calculate the predictive residuals
pr <- residuals(linear.model)/(1-lm.influence(linear.model)$hat)
#' calculate the PRESS
PRESS <- sum(pr^2)
return(PRESS)
}
pred_r_squared <- function(linear.model) {
#' Use anova() to get the sum of squares for the linear model
lm.anova <- anova(linear.model)
#' Calculate the total sum of squares
tss <- sum(lm.anova$'Sum Sq')
# Calculate the predictive R^2
pred.r.squared <- 1-PRESS(linear.model)/(tss)
return(pred.r.squared)
}
model_fit_stats <- function(linear.model) {
r.sqr <- summary(linear.model)$r.squared
adj.r.sqr <- summary(linear.model)$adj.r.squared
pre.r.sqr <- pred_r_squared(linear.model)
PRESS <- PRESS(linear.model)
return.df <- data.frame(r.squared = r.sqr, adj.r.squared = adj.r.sqr, pred.r.squared = pre.r.sqr, press = PRESS)
return(return.df)
}
lmp <- function (modelobject) {
if (class(modelobject) != "lm") stop("Not an object of class 'lm' ")
f <- summary(modelobject)$fstatistic
p <- pf(f[1],f[2],f[3],lower.tail=F)
attributes(p) <- NULL
return(p)
}
library(datasets)
library(ggplot2)
library(plyr)
data(mtcars)
galton
library(UsingR)
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
myPlot <- function(beta){
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g <- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse <- mean( (y - beta * x) ^2 )
g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))
g
}
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
library(manipulate)
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
myPlot <- function(beta){
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g <- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse <- mean( (y - beta * x) ^2 )
g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))
g
}
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
View(freqData)
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
myPlot <- function(beta){
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g <- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse <- mean( (y - beta * x) ^2 )
g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))
g
}
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
qplot(wt, mpg, data=mtcars, colour=am)
abline(a=1, b=2, col=2)
plot(wt,mpg,data=mtcars)
plot(wt,mpg,data=mtcars)
plot(wt,mpg)
plot(wt,mpg,mtcars)
plot(wt,mpg,data=mtcars)
?plot
with(mtcars, plot(wt,mpg))
abline(a=1, b=2, col=2)
with(mtcars, plot(wt,mpg,col=am))
with(mtcars, plot(wt,mpg))
with(mtcars, plot(wt,mpg,pch=am))
?abline
abline(a=1, b=2, col=2)
with(mtcars, plot(wt,mpg,pch=am))
lm02 <- lm(mpg ~ wt + factor(am), data = mtcars)
summary(lm02)
summary(lm02)$coef
summary(lm02)$coef[1,1]
summary(lm02)$coef[2,1]
summary(lm02)$coef[3,1]
abline(a=summary(lm02)$coef[1,1], b=summary(lm02)$coef[2,1],col=2)
abline(a=summary(lm02)$coef[1,1]+summary(lm02)$coef[3,1], b=summary(lm02)$coef[2,1],col=2)
with(mtcars, plot(wt,mpg,pch=am))
abline(a=summary(lm02)$coef[1,1], b=summary(lm02)$coef[2,1],col=2)
abline(a=summary(lm02)$coef[1,1], b=summary(lm02)$coef[2,1],col=3)
abline(a=summary(lm02)$coef[1,1], b=summary(lm02)$coef[2,1],col=4)
abline(a=summary(lm02)$coef[1,1], b=summary(lm02)$coef[2,1],col=5)
abline(a=summary(lm02)$coef[1,1], b=summary(lm02)$coef[2,1],col=1)
abline(a=summary(lm02)$coef[1,1], b=summary(lm02)$coef[2,1],col=6)
abline(a=summary(lm02)$coef[1,1], b=summary(lm02)$coef[2,1],col=7)
abline(a=summary(lm02)$coef[1,1], b=summary(lm02)$coef[2,1],col=8)
abline(a=summary(lm02)$coef[1,1], b=summary(lm02)$coef[2,1],col=9)
abline(a=summary(lm02)$coef[1,1], b=summary(lm02)$coef[2,1],col=10)
qplot(wt, mpg, data=mtcars, colour=am)
q <- qplot(wt, mpg, data=mtcars, colour=am)
q <- q + geom_abline(intercept=summary(lm02)$coef[1,1], slope=summary(lm02)$coef[2,1])
q
q <- qplot(wt, mpg, data=mtcars, colour=am)
q <- q + geom_abline(intercept=summary(lm02)$coef[1,1], slope=summary(lm02)$coef[2,1], col="red")
q
lm03 <- lm(mpg ~ cyl + factor(am), data = mtcars)
summary(lm03)
pred_r_squared(lm03)
library(car)
vif(lm03)
plot(lm03)
q03 <- qplot(cyl, mpg, data=mtcars, colour=am)
q03 <- q03 + geom_abline(intercept=summary(lm02)$coef[1,1], slope=summary(lm02)$coef[2,1], col="red")
q03
q03 <- qplot(cyl, mpg, data=mtcars, colour=am)
q03 <- q03 + geom_abline(intercept=summary(lm03)$coef[1,1], slope=summary(lm03)$coef[2,1], col="red")
q03
qplot(disp,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
lm04 <- lm(mpg ~ disp + factor(am), data = mtcars)
summary(lm04)
pred_r_squared(lm04)
library(car)
vif(lm04)
plot(lm04)
lm04 <- lm(mpg ~ disp + factor(am), data = mtcars)
summary(lm04)
pred_r_squared(lm04)
library(car)
vif(lm04)
q04 <- qplot(cyl, mpg, data=mtcars, colour=am)
q04 <- q04 + geom_abline(intercept=summary(lm04)$coef[1,1], slope=summary(lm04)$coef[2,1], col="red")
q04
q04 <- qplot(cyl, mpg, data=mtcars, colour=cyl)
q04 <- q04 + geom_abline(intercept=summary(lm04)$coef[1,1], slope=summary(lm04)$coef[2,1], col="red")
q04
lm03 <- lm(mpg ~ cyl + factor(am), data = mtcars)
summary(lm03)
q03 <- qplot(cyl, mpg, data=mtcars, colour=am)
q03 <- q03 + geom_abline(intercept=summary(lm03)$coef[1,1], slope=summary(lm03)$coef[2,1], col="red")
q03
q03 <- qplot(cyl, mpg, data=mtcars, colour=cyl)
q03 <- q03 + geom_abline(intercept=summary(lm03)$coef[1,1], slope=summary(lm03)$coef[2,1], col="red")
q03
lm03 <- lm(mpg ~ cyl + factor(am), data = mtcars)
summary(lm03)
pred_r_squared(lm03)
q03 <- qplot(cyl, mpg, data=mtcars, colour=cyl)
q03 <- q03 + geom_abline(intercept=summary(lm03)$coef[1,1], slope=summary(lm03)$coef[2,1], col="red")
q03
lm04 <- lm(mpg ~ disp + factor(am), data = mtcars)
summary(lm04)
pred_r_squared(lm04)
lm03 <- lm(mpg ~ cyl + factor(am), data = mtcars)
summary(lm03)
pred_r_squared(lm03)
q03 <- qplot(cyl, mpg, data=mtcars, colour=am)
q03 <- q03 + geom_abline(intercept=summary(lm03)$coef[1,1], slope=summary(lm03)$coef[2,1], col="red")
q03
lm04 <- lm(mpg ~ disp + factor(am), data = mtcars)
summary(lm04)
pred_r_squared(lm04)
q04 <- qplot(disp, mpg, data=mtcars, colour=am)
q04 <- q04 + geom_abline(intercept=summary(lm04)$coef[1,1], slope=summary(lm04)$coef[2,1], col="red")
q04
library(datasets)
library(ggplot2)
library(plyr)
data(mtcars)
qplot(mpg, geom="histogram"",data=mtcars)
qplot(mpg, geom="histogram",data=mtcars)
qplot(mpg, geom="histogram",data=mtcars)
qplot(mpg, geom="histogram",data=mtcars,binwidth=0.5)
qplot(wt, geom="histogram",data=mtcars,binwidth=0.5)
qplot(disp, geom="histogram",data=mtcars,binwidth=0.5)
qplot(disp, geom="histogram",data=mtcars,binwidth=1.0)
qplot(cyl, geom="histogram",data=mtcars,binwidth=0.5)
qplot(mpg, geom="histogram",data=mtcars,binwidth=0.5)
qplot(wt, geom="histogram",data=mtcars,binwidth=0.5)
qplot(cyl, geom="histogram",data=mtcars,binwidth=0.5)
qplot(disp, geom="histogram",data=mtcars,binwidth=0.5)
qplot(hp, geom="histogram",data=mtcars,binwidth=0.5)
qplot(carb, geom="histogram",data=mtcars,binwidth=0.5)
qplot(qsec, geom="histogram",data=mtcars,binwidth=0.5)
qplot(gear, geom="histogram",data=mtcars,binwidth=0.5)
qplot(am, geom="histogram",data=mtcars,binwidth=0.5)
qplot(vs, geom="histogram",data=mtcars,binwidth=0.5)
qplot(drat, geom="histogram",data=mtcars,binwidth=0.5)
?breaks
?qplot
qplot(mpg, wt, data=mtcars, facets=vs ~ am)
qplot(mpg, wt, data=mtcars)
qplot(mpg, wt, data=mtcars, colour=cyl)
qplot(mpg, wt, data=mtcars, size=cyl)
qplot(mpg, wt, data=mtcars, facets=vs ~ am)
hp <- mtcars$hp
wt <- mtcars$wt
cyl <- mtcars$cyl
vs <- mtcars$vs
am <- mtcars$am
qplot(hp, wt)
qplot(hp, wt, colour=cyl)
qplot(hp, wt, size=cyl)
qplot(hp, wt, facets=vs ~ am)
qplot(1:10, rnorm(10), colour = runif(10))
qplot(1:10, letters[1:10])
mod <- lm(mpg ~ wt, data=mtcars)
qplot(resid(mod), fitted(mod))
qplot(resid(mod), fitted(mod), facets = . ~ vs)
qplot(resid(mod), fitted(mod))
f <- function() {
a <- 1:10
b <- a ^ 2
qplot(a, b)
}
f()
qplot(mpg, wt, data = mtcars)
qplot(mpg, wt, data = mtcars)
qplot(mpg, data = mtcars)
qplot(y = mpg, data = mtcars)
qplot(mpg, wt, data = mtcars, geom="path")
qplot(factor(cyl), wt, data = mtcars, geom=c("boxplot", "jitter"))
qplot(mpg, data = mtcars, geom = "dotplot")
qplot(mpg, geom="histogram",data=mtcars,binwidth=0.5)
qplot(wt, geom="histogram",data=mtcars,binwidth=0.5)
qplot(cyl, geom="histogram",data=mtcars,binwidth=0.5)
qplot(disp, geom="histogram",data=mtcars,binwidth=0.5)
qplot(mpg, geom="histogram",data=mtcars,binwidth=0.5)
hist(mtcars$mpg, breaks=100)
qplot(mpg, geom="histogram",data=mtcars,binwidth=0.5)
qplot(wt,mpg,data=mtcars)
qplot(wt,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
qplot(wt,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
qplot(disp,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
qplot(wt,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
qplot(disp,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
qplot(hp,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
qplot(qsec,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
qplot(drat,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
qplot(cyl,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
qplot(carb,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
qplot(gear,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
qplot(am,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
qplot(vs,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
qplot(gear,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
qplot(carb,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
qplot(cyl,mpg,data=mtcars,geom=c("point","smooth"),method="loess")
table(mtcars)
table(mtcars$am)
table(mtcars$cyl)
table(mtcars$vs)
table(mtcars$gear)
table(mtcars$carb)
choose(5,1)
choose(5,1)+choose(5,2)+choose(5,3)+choose(5,4)+choose(5,5)
choose(5,1)
choose(5,2)
choose(5,3)
?choose
choose(5,4)
choose(5,5)
View(mtcars)
choose(8,1)+choose(8,2)+choose(8,3)+choose(8,4)+choose(8,5)+choose(8,6)+choose(8,7)+choose(8,8)
step(lm(mpg~cyl+disp+hp+drat+wt+qsec+gear+carb,data=mtcars),direction="backward")
library(MASS)
fit<- lm(mpg~cyl+disp+hp+drat+wt+qsec+gear+carb,data=mtcars)
step <- stepAIC(fit, direction="both")
step$anova
summary(lm(mpg~wt+cyl+factor(am),data=mtcars))
summary(lm(mpg~wt+factor(am)+factor(cyl),data=mtcars))
summary(lm(mpg~wt+factor(am)+factor(vs),data=mtcars))
summary(lm(mpg~wt+factor(am)+factor(gear),data=mtcars))
summary(lm(mpg~wt+factor(am)+factor(carb),data=mtcars))
summary(lm(mpg~wt+gear+factor(am),data=mtcars))
summary(lm(mpg~wt+carb+factor(am),data=mtcars))
summary(lm(mpg~wt,data=mtcars))$fstatistic
summary(lm(mpg~wt,data=mtcars))$fstatistic
summary(lm(mpg~cyl,data=mtcars))$fstatistic
summary(lm(mpg~disp,data=mtcars))$fstatistic
summary(lm(mpg~hp,data=mtcars))$fstatistic
summary(lm(mpg~drat,data=mtcars))$fstatistic
summary(lm(mpg~vs,data=mtcars))$fstatistic
summary(lm(mpg~am,data=mtcars))$fstatistic
summary(lm(mpg~carb,data=mtcars))$fstatistic
summary(lm(mpg~gear,data=mtcars))$fstatistic
summary(lm(mpg~qsec,data=mtcars))$fstatistic
data(swiss)
swiss
View(swiss)
View(swiss)
?update
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
fit3 <- update(fit, Fertility ~ Agriculture + Examination + Education)
fit3 <- update(fit1, Fertility ~ Agriculture + Examination + Education)
fit5 <- update(fit, Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality)
fit5 <- update(fit1, Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality)
anova(fit1, fit3, fit5)
nm01 <- lm(mpg ~ wt, data=mtcars)
nm03 <- update(nm01, mpg ~ wt+cyl+disp)
nm05 <- update(nm01, mpg ~ wt+cyl+disp+hp+drat)
nm07 <- update(nm01, mpg ~ wt+cyl+disp+hp+drat+vs+am)
nm09 <- update(nm01, mpg ~ wt+cyl+disp+hp+drat+vs+am+carb+gear)
nm10 <- update(nm01, mpg ~ wt+cyl+disp+hp+drat+vs+am+carb+gear+qsec)
anova(nm01,nm03,nm05,nm07.nm09,n10)
anova(nm01,nm03,nm05,nm07,nm09,n10)
anova(nm01,nm03,nm05,nm07,nm09,nm10)
nm01 <- lm(mpg ~ wt, data=mtcars)
nm03 <- update(nm01, mpg ~ wt+disp+hp)
nm05 <- update(nm01, mpg ~ wt+disp+hp+drat+carb)
nm06 <- update(nm01, mpg ~ wt+disp+hp+drat+carb+gear)
anova(nm01,nm03,nm05,nm06)
?mtcars
View(mtcars)
View(mtcars)
lm18 <- lm(mpg ~ hp + wt + cyl, data=mtcars)
confint(lm18)
?confint
library(slidify)
install.packages("slidify")
library(devtools)
setwd("~/Dropbox/jhudatascience/7_Regression_Models/CourseProject")
PRESS <- function(linear.model) {
#' calculate the predictive residuals
pr <- residuals(linear.model)/(1-lm.influence(linear.model)$hat)
#' calculate the PRESS
PRESS <- sum(pr^2)
return(PRESS)
}
pred_r_squared <- function(linear.model) {
#' Use anova() to get the sum of squares for the linear model
lm.anova <- anova(linear.model)
#' Calculate the total sum of squares
tss <- sum(lm.anova$'Sum Sq')
# Calculate the predictive R^2
pred.r.squared <- 1-PRESS(linear.model)/(tss)
return(pred.r.squared)
}
model_fit_stats <- function(linear.model) {
r.sqr <- summary(linear.model)$r.squared
adj.r.sqr <- summary(linear.model)$adj.r.squared
pre.r.sqr <- pred_r_squared(linear.model)
PRESS <- PRESS(linear.model)
return.df <- data.frame(r.squared = r.sqr, adj.r.squared = adj.r.sqr, pred.r.squared = pre.r.sqr, press = PRESS)
return(return.df)
}
lmp <- function (modelobject) {
if (class(modelobject) != "lm") stop("Not an object of class 'lm' ")
f <- summary(modelobject)$fstatistic
p <- pf(f[1],f[2],f[3],lower.tail=F)
attributes(p) <- NULL
return(p)
}
library(datasets)
library(ggplot2)
library(plyr)
data(mtcars)
sum(is.na(mtcars))
head(mtcars)
summary(mtcars)
?par
?mtcars
View(mtcars)
row.names(mtcars)
lm21 <- lm(mpg ~ wt + qsec + factor(am), data=mtcars)
summary(lm21)
pred_r_squared(lm21)
library(car)
vif(lm21)
par(mfrow=c(2,2))
plot(lm21)
plot(lm21)
par(mfrow=c(2,2))
plot(lm21)
?plot
plot(x=wt,y=mpg,data=mtcars)
with(mtcars,plot(wt,mpg))
