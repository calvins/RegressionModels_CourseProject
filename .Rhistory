}
View(df)
?rbind
df <- data.frame()
c <- c(1,2,3)
rbind(df,c)
df <- rbind(df,c)
View(df)
df <- data.frame()
c <- c(1,2,3)
df <- cbind(df,c)
df <- data.frame(nrows=1000,ncol=3)
View(df)
m <- matrix(nrow = 1000, ncol = 3)
c <- c(1,2,3)
m <- cbind(m,c)
m <- matrix(nrow = 1000, ncol = 3)
c <- c(1,2,3)
m <- rbind(m,c)
View(m)
m <- matrix()
c <- c(1,2,3)
m <- rbind(m,c)
View(m)
m <- matrix()
c <- c(1,2,3)
m <- cbind(m,c)
View(m)
set.seed(568)
lambda <- 0.2
mean <- 1/lambda
sd <- 1/lambda
nosim <- 1000
n <- 40
rexp(n, lambda)
for (i in 1:3) {
rexp(n, lambda)
}
for (i in 1:3) {
rexp(n, lambda)
}
for (i in 1:3) {
c <- rexp(n, lambda)
}
matrix(rexp(n, lambda),nosim)
set.seed(568)
lambda <- 0.2
mean <- 1/lambda
sd <- 1/lambda
nosim <- 1000
n <- 40
matrix(rexp(n, lambda),nosim)
set.seed(568)
lambda <- 0.2
mean <- 1/lambda
sd <- 1/lambda
nosim <- 1000
n <- 40
m <- matrix(rexp(n, lambda),nosim)
View(m)
?matrix
require(datasets);data(InsectSprays); require(stats); require(ggplot2)
g = ggplot(data = InsectSprays, aes(y = count, x = spray, fill  = spray))
g = g + geom_violin(colour = "black", size = 2)
g = g + xlab("Type of spray") + ylab("Insect count")
g
View(InsectSprays)
?InsectSprays
View(InsectSprays)
summary(lm(count ~ spray, data = InsectSprays))$coef
library(datasets); data(swiss)
head(swiss)
?swiss
View(swiss)
library(dplyr);
swiss = mutate(swiss, CatholicBin = 1 * (Catholic > 50))
g = ggplot(swiss, aes(x = Agriculture, y = Fertility, colour = factor(CatholicBin)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("% in Agriculture") + ylab("Fertility")
g
source('~/.active-rstudio-document', echo=TRUE)
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
knit_hooks$set(plot = knitr:::hook_plot_html)
runif(1)
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
source('~/.active-rstudio-document', echo=TRUE)
options(width = 100); library(knitr)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
knit_hooks$set(plot = knitr:::hook_plot_html)
runif(1)
library(datasets); data(swiss)
head(swiss)
library(dplyr);
swiss = mutate(swiss, CatholicBin = 1 * (Catholic > 50))
g = ggplot(swiss, aes(x = Agriculture, y = Fertility, colour = factor(CatholicBin)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("% in Agriculture") + ylab("Fertility")
g
fit = lm(Fertility ~ Agriculture, data = swiss)
g1 = g
g1 = g1 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g1
fit = lm(Fertility ~ Agriculture + factor(CatholicBin), data = swiss)
summary(fit)$coef
g1 = g
g1 = g1 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g1 = g1 + geom_abline(intercept = coef(fit)[1] + coef(fit)[3], slope = coef(fit)[2], size = 2)
g1
fit = lm(Fertility ~ Agriculture * factor(CatholicBin), data = swiss)
g1 = g
g1 = g1 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g1 = g1 + geom_abline(intercept = coef(fit)[1] + coef(fit)[3],
slope = coef(fit)[2] + coef(fit)[4], size = 2)
g1
options(width = 100); library(knitr)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
knit_hooks$set(plot = knitr:::hook_plot_html)
runif(1)
data(swiss); par(mfrow = c(2, 2))
fit <- lm(Fertility ~ . , data = swiss); plot(fit)
summary(fit)
library(UsingR)
data(father.son)
fit <- lm(sheight ~ fheight, data = father.son)
y <- father.son$sheight
x <- father.son$fheight
b1 <- cor(y,x) * sd(y) / sd(x)
b0 <- mean(y) - b1 * mean(x)
rbind(coef(fit), c(b0, b1))
library(ggplot2)
library(ggplot2)
g <- ggplot(father.son, aes(x=fheight, y=sheight))
g <- g + geom_point()
g <- g + geom_smooth(method=lm, se = FALSE, lwd = 2)
g
library(ggplot2)
g <- ggplot(father.son, aes(x=fheight, y=sheight))
g
g <- g + geom_point()
g <- g + geom_smooth(method=lm, se = FALSE, lwd = 2)
g
library(ggplot2)
library(ggplot2)
g = ggplot(father.son, aes(x=fheight, y=sheight))
g = g + geom_point()
g = g + geom_smooth(method=lm, se = FALSE, lwd = 2)
g
library(UsingR)
data(father.son)
fit <- lm(sheight ~ fheight, data = father.son)
y <- father.son$sheight
x <- father.son$fheight
b1 <- cor(y,x) * sd(y) / sd(x)
b0 <- mean(y) - b1 * mean(x)
rbind(coef(fit), c(b0, b1))
library(ggplot2)
g = ggplot(father.son, aes(x=fheight, y=sheight))
g = g + geom_point()
g = g + geom_smooth(method=lm, se = FALSE, lwd = 2)
g
summary(fit)
summary(fit)
xc <- x - mean(x)
yc <- y - mean(y)
sum(xc * yc) / sum(xc^2)
lm(yc ~ xc -1)
xn <- (x - mean(x)) / sd(x)
yn <- (y - mean(y)) / sd(y)
lm(yn ~ xn)
cor(xn, yn)
n <- 100
x <- c(10, rnorm(n)); y <- c(10, c(rnorm(n)))
plot(x, y, frame = FALSE, cex = 2, pch = 21, bg = "lightblue", col = "black")
abline(lm(y ~ x))
n <- 100; x <- c(10, rnorm(n)); y <- c(10, c(rnorm(n)))
plot(x, y, frame = FALSE, cex = 2, pch = 21, bg = "lightblue", col = "black")
abline(lm(y ~ x))
fit <- lm(y ~ x)
dfbetas(fit)
dfbetas(fit)[1:10,2]
library(datasets)
data(mtcars)
mtcars
cor(mtcars)
library(datasets)
data(mtcars)
fitQ2A <- lm(mpg ~ as.factor(cyl) + wt, data = mtcars)
fitQ2B <- lm(mpg ~ as.factor(cyl), data = mtcars)
library(datasets)
data(mtcars)
fit <- lm(mpg ~ wt +factor(cyl), mtcars)
plot(mtcars$wt, mtcars$mpg)
?plot
plot(mtcars$wt, mtcars$mpg, mtcars$cyl)
plot(mtcars$mpg, mtcars$cyl)
plot(mtcars$wt, mtcars$mpg)
plot(mtcars$mpg ~ mtcars$cyl)
plot(mtcars$mpg ~ mtcars$wt + mtcars$cyl)
plot(mtcars$wt, mtcars$mpg, pch = mtcars$cyl)
abline(coef(fit)[1], coef(fit)[2])
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2])
abline(coef(fit)[1] + coef(fit)[4], coef(fit)[2])
fit0wt <- lm(mpg ~ factor(cyl), mtcars)
plot(mtcars$cyl, mtcars$mpg)
abline(coef(fit0wt)[1],0,col="green")
abline(coef(fit0wt)[1]+coef(fit0wt)[3],0,col="red")
summary(fit)
summary(fit0wt)
library(datasets)
data(mtcars)
fit <- lm(mpg ~ wt +factor(cyl), mtcars)
plot(mtcars$wt, mtcars$mpg, pch = mtcars$cyl)
abline(coef(fit)[1], coef(fit)[2])
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2])
abline(coef(fit)[1] + coef(fit)[4], coef(fit)[2])
fit0wt <- lm(mpg ~ factor(cyl), mtcars)
abline(coef(fit0wt)[1],0,col="green")
abline(coef(fit0wt)[1]+coef(fit0wt)[3],0,col="red")
summary(fit)
summary(fit0wt)
anova(fit0wt, fit)
library(datasets)
data(mtcars)
plot(mtcars$wt, mtcars$mpg, pch = mtcars$cyl)
fit <- lm(mpg ~ wt +factor(cyl), mtcars)
abline(coef(fit)[1], coef(fit)[2])
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2])
abline(coef(fit)[1] + coef(fit)[4], coef(fit)[2])
fit0wt <- lm(mpg ~ factor(cyl), mtcars)
abline(coef(fit0wt)[1],0,col="green")
abline(coef(fit0wt)[1]+coef(fit0wt)[3],0,col="red")
subset(mtcars cyl == 4)
subset(mtcars, mtcars$cyl == 4)
subset(mtcars, mtcars$cyl == 4)$mpg
mean(subset(mtcars, mtcars$cyl == 4)$mpg)
mean(subset(mtcars, mtcars$cyl == 6)$mpg)
mean(subset(mtcars, mtcars$cyl == 8)$mpg)
library(datasets)
data(mtcars)
fitQ2A <- lm(mpg ~ as.factor(cyl) + wt, data = mtcars)
fitQ2B <- lm(mpg ~ as.factor(cyl), data = mtcars)
library(datasets)
data(mtcars)
fit <- lm(mpg ~ wt +factor(cyl), mtcars)
plot(mtcars$wt, mtcars$mpg, pch = mtcars$cyl)
abline(coef(fit)[1], coef(fit)[2]) #
summary(fit$)coef
summary(fit)coef
summary(fit)$coef
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2]) #
abline(coef(fit)[1] + coef(fit)[4], coef(fit)[2]) #
fit0wt <- lm(mpg ~ factor(cyl), mtcars)
summary(fit0wt)$coef
?abline
abline(coef(fit0wt)[1],0,col="green") #
abline(coef(fit0wt)[1]+coef(fit0wt)[3],0,col="red") #
library(datasets)
data(mtcars)
setwd("~/Dropbox/jhudatascience/7_Regression_Models/CourseProject")
save(mtcars,file="data/mtcars.rda")
?mtcars
summary(mtcars)
getwd()
str(mtcars)
View(mtcars)
View(mtcars)
View(mtcars)
is.na(mtcars)
sum(is.na(mtcars))
cor(mtcars)
?cor
plot(mpg~disp, mtcars)
?plot
library(datasets)
data(mtcars)
hist(mtcars$mpg)
View(mtcars)
View(mtcars$disp)
hist(mtcars$disp)
hist(mtcars$hp)
hist(mtcars$drat)
hist(mtcars$wt)
hist(mtcars$qsec)
table(mtcars$cyl)
plot(mtcars$hp, mtcars$mgp)
plot(mtcars$drat, mtcars$mgp)
plot(mtcars$disp, mtcars$mgp)
plot(mtcars$wt, mtcars$mgp)
plot(mtcars$qsec, mtcars$mgp)
boxplot(mtcars$mpg ~ mtcars$cyl)
boxplot(mtcars$mpg ~ mtcars$vs)
boxplot(mtcars$mpg ~ mtcars$am)
boxplot(mtcars$mpg ~ mtcars$gear)
boxplot(mtcars$mpg ~ mtcars$carb)
plot(mtcars$mpg, pch=mtcars$am)
plot(mtcars$disp, mtcars$mpg, pch=mtcars$am)
cor(mtcars$mpg,mtcars$disp)
View(mtcars)
cor(mtcars$mpg,mtcars$hp)
cor(mtcars$mpg,mtcars$drat)
cor(mtcars$mpg,mtcars$wt)
cor(mtcars$mpg,mtcars$qsec)
cor(mtcars$mpg,mtcars$cyl)
cor(mtcars$mpg,mtcars$vs)
cor(mtcars$mpg,mtcars$am)
cor(mtcars$mpg,mtcars$gear)
cor(mtcars$mpg,mtcars$carb)
cor(mtcars$mpg,factor(mtcars$am)
)
?cor
plot(mtcars$mpg, pch = mtcars$am)
plot(mtcars$mpg, mtcars$wt, pch = mtcars$am)
?plot
?points
plot(mtcars$mpg, mtcars$wt, col = mtcars$am)
plot(mtcars$mpg, mtcars$wt, pch = mtcars$am)
library(ggplot2)
qplot(mtcars$wt, mtcars$mpg)
qplot(mtcars$wt, mtcars$mpg, color = mtcars$am)
qplot(mtcars$wt, mtcars$mpg, color = factor(mtcars$am)
)
ggplot(mtcars, aex(x=wt, y=mpg))
ggplot(mtcars, aes(x=wt, y=mpg))
g <- ggplot(mtcars, aes(x=wt, y=mpg))
g <- g + geom_point()
g
g <- ggplot(mtcars, aes(x=wt, y=mpg, color=am))
g <- g + geom_point()
g
g <- ggplot(mtcars, aes(x=wt, y=mpg, color=factor(am))
g <- g + geom_point()
g <- ggplot(mtcars, aes(x=wt, y=mpg, color=factor(am)))
g <- g + geom_point()
g
g <- g + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g
g <- g + geom_smooth(method = "lm")
g
cor(mtcars$mpg, mtcars$wt)
cor(mtcars$mpg, mtcars$gear)
cor(mtcars$mpg, mtcars$disp)
cor(mtcars$mpg, mtcars$hp)
View(mtcars)
cor(mtcars$mpg, mtcars$drat)
cor(mtcars$mpg, mtcars$gear)
cor(mtcars$mpg, mtcars$carb)
cor(mtcars$mpg, mtcars$qsec)
cor(mtcars$mpg, mtcars$cyl)
cor(mtcars)
qplot(wt, mpg, mtcars)
qplot(wt, mpg, data=mtcars)
qplot(wt, mpg, data=mtcars, col=am)
qplot(wt, mpg, data=mtcars, col=factor(am)
)
qplot(wt, mpg, data=mtcars, col=factor(am))
qplot(disp, mpg, data=mtcars, col=factor(am))
qplot(wt, mpg, data=mtcars, col=factor(am))
qplot(hp, mpg, data=mtcars, col=factor(am))
lm(mpg~wt+disp+hp)
lm(mpg~wt+disp+hp, data=mtcars)
summary(lm(mpg~wt+disp+hp, data=mtcars))
summary(lm(mpg~wt, data=mtcars))
summary(lm(mpg~wt+disp, data=mtcars))
summary(lm(mpg~wt+disp+hp, data=mtcars))
qplot(wt, mpg, data=mtcars)
qplot(wt, mpg, data=mtcars, geom=c("smooth"), color=factor(cyl), method="lm",
formula = y ~ ns(x,4))
qplot(wt, mpg, data=mtcars, geom=c("smooth"), color=factor(cyl), method="lm")
qplot(wt, mpg, data=mtcars, geom=c("smooth"), method="lm")
qplot(disp, mpg, data=mtcars, geom=c("smooth"), method="lm")
qplot(hp, mpg, data=mtcars, geom=c("smooth"), method="lm")
cor(mtcars)
qplot(qsec, mpg, data=mtcars, geom=c("smooth"), method="lm")
qplot(wt, disp, data=mtcars, geom=c("smooth"), method="lm")
cor(mtcars$wt,mtcars$disp)
cor(mtcars$wt,mtcars$hp)
cor(mtcars$disp,mtcars$hp)
plot(qsec,mpg)
plot(qsec,mpg, mtcars)
plot(qsec,mpg, data=mtcars)
?plot
plot(mtcars$qsec, mtcars$mpg)
cor(mtcars$qsec, mtcars$mpg)
cor(mtcars$wt, mtcars$mpg)
plot(mtcars$wt, mtcars$mpg)
cor(mtcars$wt, mtcars$disp)
plot(mtcars$wt, mtcars$disp)
summary(lm(mpg~wt,data=mtcars))
summary(lm(mpg~disp,data=mtcars))
summary(lm(mpg~hp,data=mtcars))
library(datasets)
data(mtcars)
plot(mtcars$wt, mtcars$mpg)
?lm.summary
?summary.lm
fit01 <- lm(mpg ~ hp, data = mtcars)
summary(fit01)$fstatistic[1]
summary(fit01)$r.squared
summary(fit01)$adj.r.squared
summary(fit10)
summary(fit01)
summary(fit01)$fstatistic[3]
summary(fit01)$fstatistic
summary(fit01)$sigma
summary(fit01)$coef
summary(fit01)
summary(fit01)$p.value
summary(fit01)$p-value
summary(fit01)$pvalue
names(summary(fit01))
summary(fit01)$fstatistic
?pf
pf(summary(fit01)$fstatistic[1],summary(fit01)$fstatistic[2],summary(fit01)$fstatistic[3],lower.tail=F)
qplot(wt,mpg,data=mtcars,geom=c("smooth"),method="lm")
summary(mtcars)
str(mtcars)
factor(mtcars$cyl)
?cut2
library(dplyr)
?cut2
library(Hmisc)
?cut2
require(stats); require(grDevices)
x <- 1:10
y <- sort(10*runif(10))
z <- runif(10)
z3 <- cbind(z, 2*runif(10), runif(10))
symbols(x, y, thermometers = cbind(.5, 1, z), inches = .5, fg = 1:10)
symbols(x, y, thermometers = z3, inches = FALSE)
text(x, y, apply(format(round(z3, digits = 2)), 1, paste, collapse = ","),
adj = c(-.2,0), cex = .75, col = "purple", xpd = NA)
N <- nrow(trees)
with(trees, {
## Girth is diameter in inches
symbols(Height, Volume, circles = Girth/24, inches = FALSE,
main = "Trees' Girth") # xlab and ylab automatically
## Colours too:
op <- palette(rainbow(N, end = 0.9))
symbols(Height, Volume, circles = Girth/16, inches = FALSE, bg = 1:N,
fg = "gray30", main = "symbols(*, circles = Girth/16, bg = 1:N)")
palette(op)
})
?symbols
symbols(0,0, circles=c(2),)
symbols(0,0, circles=c(1,2,3),)
symbols(0,0, circles=c(1),)
symbols(0,0, circles=c(2),)
symbols(0,0, circles=c(3),)
symbols(0,0, circles=c(1))
symbols(0,0, circles=c(2))
symbols(0,0, circles=c(3))
symbols(5,5, circles=c(3))
symbols(0,0, circles=c(1))
require(plotrix)
install.packages("plotrix")
require(plotrix)
draw.circle(4,14,2,border="blue",col="tan2")
draw.circle(4,14,2,border="blue",col="tan2")
plot(mtcars$mpg)
draw.circle(4,14,2,border="blue",col="tan2")
draw.circle(8,18,2,border="blue",col="tan2")
draw.circle(12,24,2,border="blue")
draw.circle(12,24,3,border="red")
draw.circle(12,24,2.1,border="red")
plot(mtcars$mpg)
draw.circle(12,24,2.1,border="red")
draw.circle(12,24,2.2,border="blue")
draw.circle(12,24,2.3,border="green")
draw.circle(12,24,2.4,border="gray")
draw.circle(12,24,2.4,border="orange")
draw.circle(12,24,2.5,border="orange")
draw.circle(12,24,2.6,border="black")
draw.circle(12,24,2.7,border="brown")
plot(mtcars$mpg)
draw.circle(12,24,0.1,border="red")
draw.circle(12,24,0.2,border="blue")
draw.circle(12,24,0.3,border="green")
draw.circle(2,4,2.7,col="brown")
draw.circle(2,4,2.7,col="tan2")
draw.circle(2,4,2.7,border="tan2",col="tan2")
plot(mtcars$mpg)
draw.circle(12,24,2.7,border="tan2",col="tan2")
draw.circle(12,24,2.6,border="red",col="red")
draw.circle(12,24,2.7,border="tan2",col="tan2")
draw.circle(12,24,2.5,border="red",col="red")
draw.circle(12,24,2.3,border="green",col="green")
